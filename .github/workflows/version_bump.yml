name: Version bump

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type"
        required: true
        type: choice
        default: patch
        options:
        - patch
        - minor
        - manor
        - prerelease
        - build

jobs:
  version_bump:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    permissions:
      contents: write       # to create a github release
      pull-requests: write  # to create and update PRs

    steps:
    - uses: actions/checkout@v3.0.2

    # - name: Validate version input
    #   if: ${{ github.event.inputs.force != true }}
    #   id: validate-version
    #   uses: ./.github/actions/validate-version-sequence
    #   with:
    #     version-proposed: ${{ github.event.inputs.version }}
    # - name: Debug version bump type
    #   run: echo "${{ steps.validate-version.outputs.bump-type }}"

    # - name: Install Poetry
    #   uses: snok/install-poetry@v1
    #   with:
    #     # Version of Poetry to use
    #     version: 1.1.13
    #     virtualenvs-create: true
    #     virtualenvs-in-project: true

    - name: Set up Python
      uses: actions/setup-python@v4.0.0
      with:
        python-version: "3.10"
        architecture: x64

    - name: Install bump2version
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pipx install bump2version
        bump2version --help

    - name: Get intended version
      run: |
        version=$(bump2version --dry-run --list ${{ github.event.inputs.bump }} | grep new_version | sed -r s,"^.*=",,)
        echo "$version"
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Bump version
      run: |
        bump2version ${{ github.event.inputs.bump }}

    # - name: Poetry install
    #   run: |
    #     poetry install

    # - name: Bump version
    #   run: |
    #     BUMP_TYPE="${{ steps.validate-version.outputs.bump-type }}"
    #     echo "Flushing changelog entries with '--$BUMP_TYPE' flag..."
    #     poetry run changelog release --$BUMP_TYPE --yes
    #     echo "Adding changelog to git..."
    #     git add CHANGELOG.md
    #     echo "Bumping version entries..."
    #     poetry run bumpversion "$BUMP_TYPE" --new-version="$NEW_VER" --allow-dirty --no-commit --no-tag

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      id: create-pull-request
      with:
        commit-message: "chore: Bump package version"
        title: "chore: Release v${{ env.VERSION }}"
        body: |
          Prepare MeltanoSDK `v${{ env.VERSION }}` for release
        branch: release/v${{ env.VERSION }}
        base: main
        labels: release

    # - name: Approve Pull Request
    #   if: ${{ steps.create-pull-request.outputs.pull-request-number != 0 }}
    #   uses: juliangruber/approve-pull-request-action@v1.1.1
    #   with:
    #     # https://github.com/juliangruber/approve-pull-request-action
    #     github-token: ${{ secrets.ACTIONS_BOT_TOKEN }}
    #     number: ${{ steps.create-pull-request.outputs.pull-request-number }}
